// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.unlv.cs.rebelhotel.web;

import edu.unlv.cs.rebelhotel.domain.WorkEffortDuration;
import java.io.UnsupportedEncodingException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.String;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect WorkEffortDurationController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST)
    public String WorkEffortDurationController.create(@Valid WorkEffortDuration workEffortDuration, BindingResult result, Model model, HttpServletRequest request) {
        if (result.hasErrors()) {
            model.addAttribute("workEffortDuration", workEffortDuration);
            addDateTimeFormatPatterns(model);
            return "workeffortdurations/create";
        }
        workEffortDuration.persist();
        return "redirect:/workeffortdurations/" + encodeUrlPathSegment(workEffortDuration.getId().toString(), request);
    }
    
    @RequestMapping(params = "form", method = RequestMethod.GET)
    public String WorkEffortDurationController.createForm(Model model) {
        model.addAttribute("workEffortDuration", new WorkEffortDuration());
        addDateTimeFormatPatterns(model);
        return "workeffortdurations/create";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public String WorkEffortDurationController.show(@PathVariable("id") Long id, Model model) {
        addDateTimeFormatPatterns(model);
        model.addAttribute("workeffortduration", WorkEffortDuration.findWorkEffortDuration(id));
        model.addAttribute("itemId", id);
        return "workeffortdurations/show";
    }
    
    @RequestMapping(method = RequestMethod.GET)
    public String WorkEffortDurationController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model model) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            model.addAttribute("workeffortdurations", WorkEffortDuration.findWorkEffortDurationEntries(page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo));
            float nrOfPages = (float) WorkEffortDuration.countWorkEffortDurations() / sizeNo;
            model.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            model.addAttribute("workeffortdurations", WorkEffortDuration.findAllWorkEffortDurations());
        }
        addDateTimeFormatPatterns(model);
        return "workeffortdurations/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT)
    public String WorkEffortDurationController.update(@Valid WorkEffortDuration workEffortDuration, BindingResult result, Model model, HttpServletRequest request) {
        if (result.hasErrors()) {
            model.addAttribute("workEffortDuration", workEffortDuration);
            addDateTimeFormatPatterns(model);
            return "workeffortdurations/update";
        }
        workEffortDuration.merge();
        return "redirect:/workeffortdurations/" + encodeUrlPathSegment(workEffortDuration.getId().toString(), request);
    }
    
    @RequestMapping(value = "/{id}", params = "form", method = RequestMethod.GET)
    public String WorkEffortDurationController.updateForm(@PathVariable("id") Long id, Model model) {
        model.addAttribute("workEffortDuration", WorkEffortDuration.findWorkEffortDuration(id));
        addDateTimeFormatPatterns(model);
        return "workeffortdurations/update";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
    public String WorkEffortDurationController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model model) {
        WorkEffortDuration.findWorkEffortDuration(id).remove();
        model.addAttribute("page", (page == null) ? "1" : page.toString());
        model.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/workeffortdurations?page=" + ((page == null) ? "1" : page.toString()) + "&size=" + ((size == null) ? "10" : size.toString());
    }
    
    void WorkEffortDurationController.addDateTimeFormatPatterns(Model model) {
        model.addAttribute("workEffortDuration_startdate_date_format", DateTimeFormat.patternForStyle("S-", LocaleContextHolder.getLocale()));
        model.addAttribute("workEffortDuration_enddate_date_format", DateTimeFormat.patternForStyle("S-", LocaleContextHolder.getLocale()));
    }
    
    String WorkEffortDurationController.encodeUrlPathSegment(String pathSegment, HttpServletRequest request) {
        String enc = request.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
