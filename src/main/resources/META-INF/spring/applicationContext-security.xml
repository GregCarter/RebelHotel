<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- Added for method security -->

	<beans:bean id="methodAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean
					class="org.springframework.security.access.annotation.Jsr250Voter" />
				<beans:bean
					class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter">
					<beans:constructor-arg>
						<beans:bean
							class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice" />
					</beans:constructor-arg>
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>


	<!-- HTTP security configurations -->
	<http auto-config="true" use-expressions="true"
		access-decision-manager-ref="httpAccessDecisionManager">
		<form-login login-processing-url="/resources/j_spring_security_check"
			login-page="/login" authentication-failure-url="/login?login_error=t" />
		<logout logout-url="/resources/j_spring_security_logout" />

		<!-- Configure these elements to secure URIs in your application -->
		<intercept-url pattern="/useraccounts/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/choices/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/member/**" access="isAuthenticated()" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/"
			access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER','ROLE_ADMIN','ROLE_SUPERUSER')" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_SUPERUSER')" />
	</http>

	<!-- For now, the default implementation is (attempted to be) rebuilt here 
		just in case it needs to be changed later -->
	<beans:bean id="httpAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<!-- <beans:bean class = "edu.unlv.cs.rebelhotel.service.RebelVoter" 
					/> -->
				<!-- <beans:bean class = "org.springframework.security.access.vote.RoleVoter" 
					/> <beans:bean class = "org.springframework.security.access.vote.AuthenticatedVoter" 
					/> -->
				<beans:bean
					class="org.springframework.security.web.access.expression.WebExpressionVoter" />
				<!-- <beans:ref local = "authenticatedVoter" /> -->
				<!-- <beans:ref local = "rebelVoter" /> -->
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<!-- SHA-256 values can be produced using 'echo -n your_desired_password 
			| sha256sum' (using normal *nix environments) -->
		<authentication-provider>
			<password-encoder hash="sha-256" />
			<user-service>
				<user name="root"
					password="9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
					authorities="ROLE_ADMIN" />
				<!-- <user name="user" password="04f8996da763b7a969b1028ee3007569eaf3a635486ddab211d512c85b9df8fb" 
					authorities="ROLE_USER"/> -->
			</user-service>
		</authentication-provider>
		<authentication-provider user-service-ref="userService">
			<password-encoder hash="sha-256" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>